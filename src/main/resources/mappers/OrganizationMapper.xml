<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hx.hxjob.dao.OrganizationMapper">
    <resultMap id="memberMap" type="com.hx.hxjob.model.Member">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <collection property="saveRemarkMembers" ofType="com.hx.hxjob.model.SaveRemarkMember">
            <id column="srmId" jdbcType="BIGINT" property="id"/>
            <result column="remarkid" jdbcType="VARCHAR" property="remarkid"/>
            <result column="memberid" jdbcType="VARCHAR" property="memberid"/>
        </collection>
    </resultMap>
    <select id="getOrganizations" resultType="com.hx.hxjob.model.Organization">
          select id,
               `code`,
               `fullname`,
               shortname,
               org_people_number,
               logo,
               brief,
               description,
               city,
               industry,
               tags,
               salary,
               grade,
               `score`,
               `sort`,
               date_format(createtime, '%Y-%m-%d %H:%i:%s') as createtime,
               date_format(shelftime, '%Y-%m-%d %H:%i:%s')  as shelftime,
               date_format(updatetime, '%Y-%m-%d %H:%i:%s') as updatetime
        from organization
        where now() > publishtime
          and (shelftime > now() or shelftime is null)
    </select>
    <select id="getCities" resultType='com.hx.hxjob.model.City'>
        select id, `name`, ishot, `status`, date_format(createtime, '%Y-%m-%d %H:%i:%s') as createtime
        from city
        where `status` = 'ENABLE'
        order by ishot desc, sort;
    </select>
    <select id="getIndustries" resultType="com.hx.hxjob.model.Industry">
        select id, `name`, ishot, `status`, sort, date_format(createtime, '%Y-%m-%d %H:%i:%s') as createtime
        from industry
        where `status` = 'ENABLE'
        order by ishot desc, sort;
    </select>
    <select id="getOrganizationsPage" parameterType="java.util.Map" resultType="com.hx.hxjob.model.Organization">
        select
        torg.`code`,torg.`fullname`,torg.shortname,torg.logo,torg.brief,torg.description,
        torg.city,torg.industry,torg.tags,torg.salary,torg.grade,torg.`score`,torg.treatment,torg.`sort`,torg.`ishot`,
        date_format(torg.createtime,'%Y-%m-%d %H:%i:%s') as createtime,
        date_format(torg.publishtime,'%Y-%m-%d %H:%i:%s') as publishtime,
        date_format(torg.shelftime,'%Y-%m-%d %H:%i:%s') as shelftime,
        date_format(torg.updatetime,'%Y-%m-%d %H:%i:%s') as updatetime,
        tu.real_name,
        tc.name as cityname,
        ti.name as industryname,
        ifnull((select count(1) from organization_praise where orgcode = torg.code),0) as praiseCount,
        ifnull((select count(1) from organization_remark o where orgcode = torg.code),0) as commontCount,
        ifnull((select count(1) from organization_collection where orgcode = torg.code),0) as collectCount
        from organization torg
        left join system_user tu on torg.creater = tu.id
        left join city tc on torg.city = tc.id
        left join industry ti on torg.industry = ti.id
        where 1=1
        <if test="name!=null and name!=''">
            and (torg.fullname like concat('%',#{name},'%') or torg.shortname like concat('%',#{name},'%') )
        </if>
        <if test="industry!=null and industry!=''">
            and torg.industry = #{industry}
        </if>
        <if test="city!=null and city!=''">
            and torg.city = #{city}
        </if>
        <if test="ishot!=null and ishot!=''">
            and torg.ishot = #{ishot}
        </if>
        order by torg.ishot desc,torg.sort
        <if test="offset!='' and offset!=null">
            limit ${offset},${limit}
        </if>
    </select>
    <select id="getOrganizationsPageCount" resultType="int">
        select
        count(1)
        from organization torg
        left join system_user tu on torg.creater = tu.id
        where 1=1
        <if test="name!=null and name!=''">
            and (torg.fullname like concat('%',#{name},'%') or torg.shortname like concat('%',#{name},'%') )
        </if>
        <if test="industry!=null and industry!=''">
            and torg.industry = #{industry}
        </if>
        <if test="city!=null and city!=''">
            and torg.city = #{city}
        </if>
        <if test="ishot!=null and ishot!=''">
            and torg.ishot = #{ishot}
        </if>
    </select>
    <select id="getOrganizationByFullNameAndShortName" parameterType="java.lang.String"
            resultType="com.hx.hxjob.model.Organization">
        select
        torg.`code`,torg.`fullname`,torg.shortname,torg.logo,torg.brief,torg.description,
        torg.city,torg.industry,torg.tags,torg.salary,torg.grade,torg.`score`,torg.`sort`,
        date_format(torg.createtime,'%Y-%m-%d %H:%i:%s') as createtime,
        date_format(torg.publishtime,'%Y-%m-%d %H:%i:%s') as publishtime,
        date_format(torg.shelftime,'%Y-%m-%d %H:%i:%s') as shelftime,
        date_format(torg.updatetime,'%Y-%m-%d %H:%i:%s') as updatetime,
        tu.real_name,
        tc.name as cityname,
        ti.name as industryname
        from organization torg
        left join system_user tu on torg.creater = tu.id
        left join city tc on torg.city = tc.id
        left join industry ti on torg.industry = ti.id
        where 1=1
        <if test="fullname!=null and fullname!=''">
            and fullname = #{fullname}
        </if>
        <if test="shortname!=null and shortname!=''">
            and shortname = #{shortname}
        </if>
    </select>
    <insert id="addNewOrg">
        insert into organization(fullname, shortname, `code`, logo, org_people_number, brief, description, city, industry, tags, salary,
        grade, score, treatment,
        creater, createtime, publishtime, shelftime, sort, ishot)
        values (#{fullname}, #{shortname}, #{code}, #{logo}, #{orgPeopleNumber}, #{brief}, #{description}, ${city}, ${industry}, #{tags},
        ${salary}, #{grade}, ${score}, #{treatment},
        ${creater}, now(), #{publishtime}, #{shelftime}, 10, #{ishot})
    </insert>
    <select id="getOrganizationByCode" parameterType="java.lang.String" resultType="com.hx.hxjob.model.Organization">
        select torg.`code`,
        torg.`fullname`,
        torg.shortname,
        torg.logo,
        torg.org_people_number,
        torg.brief,
        torg.description,
        torg.city,
        torg.industry,
        torg.tags,
        torg.salary,
        torg.grade,
        torg.`score`,
        torg.treatment,
        torg.`sort`,
        date_format(torg.createtime, '%Y-%m-%d %H:%i:%s')  as createtime,
        date_format(torg.publishtime, '%Y-%m-%d %H:%i:%s') as publishtime,
        date_format(torg.shelftime, '%Y-%m-%d %H:%i:%s')   as shelftime,
        date_format(torg.updatetime, '%Y-%m-%d %H:%i:%s')  as updatetime,
        tu.real_name,
        tc.name                                            as cityname,
        ti.name                                            as industryname
        from organization torg
        left join system_user tu on torg.creater = tu.id
        left join city tc on torg.city = tc.id
        left join industry ti on torg.industry = ti.id
        where torg.code = #{code}
    </select>
    <update id="editOrg">
        update organization
        set `fullname`    = #{fullname},
        `shortname`       = #{shortname},
        `logo`            = #{logo},
        org_people_number = #{orgPeopleNumber},
        `brief`           = #{brief},
        `description`     = #{description},
        `city`            = ${city},
        `industry`        = ${industry},
        `tags`            = #{tags},
        `salary`          = #{salary},
        `grade`           = #{grade},
        `score`           = #{score},
        `sort`            = #{sort},
        treatment         = #{treatment},
        `ishot`           = #{ishot},
        `publishtime`     = #{publishtime},
        `shelftime`       = #{shelftime},
        `updater`         = ${updater},
        `updatetime`      = now()
        where `code`      = #{code}
    </update>
    <delete id="deleteOrg">
        delete
        from organization
        where `code` = #{code}
    </delete>
    <delete id="deleteOrgPosition">
        delete
        from position
        where `orgcode` = #{code}
    </delete>
    <select id="getCommentPage" parameterType="java.util.Map"
            resultType="com.hx.hxjob.model.OrganizationRemark">
        select o.id, o.memberid, o.orgcode, o.orgname, o.city, o.workyear, o.post_status, o.salary_pre_tax,
        o.other_benefit, o.year_end_money,
        o.growth, o.workload, o.cultural_context, o.satisfaction, o.theme,
        date_format(o.createtime,'%Y-%m-%d %H:%i:%s') as createtime,
        o2.id, o2.fullname, o2.shortname,c.name,m.nickname,m.username
        from organization_remark o left join organization o2 on o.orgcode = o2.code
        left join city c on c.id = o.city
        left join `member` m on m.id = o.memberid
        where 1=1
        <if test="name!=null and name!=''">
            and (o2.fullname like concat('%',#{name},'%') or o2.shortname like concat('%',#{name},'%') )
        </if>
        <if test="orgcode!=null and orgcode!=''">
            and o.orgcode = #{orgcode}
        </if>
        <if test="city!=null and city!=''">
            and o.city = #{city}
        </if>
        <if test="offset!='' and offset!=null">
            limit ${offset},${limit}
        </if>
    </select>
    <select id="getCommentPageCount" parameterType="java.util.Map" resultType="int">
        select count(1)
        from organization_remark o left join organization o2 on o.orgcode = o2.code
        where 1=1
        <if test="name!=null and name!=''">
            and (o2.fullname like concat('%',#{name},'%') or o2.shortname like concat('%',#{name},'%') )
        </if>
        <if test="orgcode!=null and orgcode!=''">
            and o.orgcode = #{orgcode}
        </if>
        <if test="city!=null and city!=''">
            and o.city = #{city}
        </if>
    </select>
    <insert id="addNewComment">
        insert into organization_remark(memberid, orgcode, city, workyear, post_status, salary_pre_tax,
        other_benefit, year_end_money, growth, workload, cultural_context, satisfaction,
        theme,
        writing_evaluation, evaluate_label, remake_lable, createtime, img_upload)
        values (#{memberid}, #{orgcode}, #{city}, #{workyear}, #{postStatus}, #{salaryPreTax},
        #{otherBenefit}, #{yearEndMoney}, #{growth}, #{workload}, #{culturalContext}, #{satisfaction}, #{theme},
        #{writingEvaluation}, #{evaluateLabel}, #{remakeLable}, now(), #{imgUpload});
    </insert>
    <select id="toEditCommentById" resultType="com.hx.hxjob.model.OrganizationRemark">
        select toc.id,
        toc.memberid,
        toc.orgcode,
        toc.orgname,
        toc.memberPhoto,
        toc.city,
        toc.workyear,
        toc.post_status,
        toc.salary_pre_tax,
        toc.other_benefit,
        toc.year_end_money,
        toc.growth,
        toc.workload,
        toc.cultural_context,
        toc.satisfaction,
        toc.theme,
        toc.writing_evaluation,
        toc.evaluate_label,
        toc.img_upload,
        date_format(toc.createtime, '%Y-%m-%d %H:%i:%s') as createtime,
        tm.nickname,
        o.fullname,
        o.tags
        from organization_remark toc
        join `member` tm on toc.memberid = tm.id
        join organization o on o.code = toc.orgcode
        where toc.id = #{id}
        order by toc.createtime desc
    </select>
    <update id="editComment" parameterType="java.util.Map">
        update organization_remark
        set orgname              = #{orgname},
        `memberPhoto`        = #{memberPhoto},
        `workyear`           = #{workyear},
        `city`               = #{city},
        `post_status`        = #{postStatus},
        `salary_pre_tax`     = #{salaryPreTax},
        `other_benefit`      = #{otherBenefit},
        `year_end_money`     = #{yearEndMoney},
        `growth`             = #{growth},
        `workload`           = #{workload},
        `cultural_context`   = #{culturalContext},
        `satisfaction`       = #{satisfaction},
        `theme`              = #{theme},
        `writing_evaluation` = #{writingEvaluation},
        `evaluate_label`     = #{evaluateLabel},
        `img_upload`         = #{imgUpload},
        `createtime`         = now()
        where id = #{id}
    </update>
    <delete id="deleteComment">
        delete
        from organization_remark
        where id = #{id}
    </delete>
    <insert id="insertOrgExcel">
        insert into organization (fullname, shortname, code, logo, industry, city,tags, brief, description,
        score,treatment, publishtime, shelftime) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.fullname}, #{item.shortname}, #{item.code}, #{item.logo}, #{item.industry},
            #{item.city},#{item.tags}, #{item.brief}, #{item.description},
            #{item.score},#{item.treatment},
            #{item.publishtime}, #{item.shelftime});
        </foreach>
    </insert>
    <select id="getCitiesPage" resultType="com.hx.hxjob.model.City">
        select id,`name`,ishot,`status`,sort,date_format(createtime,'%Y-%m-%d %H:%i:%s') as createtime
        from city
        where `status` = 'ENABLE'
        <if test="name!='' and name!=null">
            and `name` like concat('%',#{name},'%')
        </if>
        <if test="ishot!='' and ishot!=null">
            and `ishot` = #{ishot}
        </if>
        order by ishot desc,sort
        limit ${offset},${limit}
    </select>
    <select id="getCitiesPageCount" resultType="int">
        select count(1)
        from city
        where `status` = 'ENABLE'
        <if test="name!='' and name!=null">
            and `name` like concat('%',#{name},'%')
        </if>
        <if test="ishot!='' and ishot!=null">
            and `ishot` = #{ishot}
        </if>
    </select>
    <select id="getCityByName" parameterType="java.lang.String" resultType="com.hx.hxjob.model.City">
        select id, `name`, ishot, `status`, sort
        from city
        where `name` = #{name}
        and `status` = 'ENABLE'
    </select>
    <insert id="addCity" parameterType="com.hx.hxjob.model.City">
        insert into city(`name`, ishot, `status`, sort, createtime)
        values (#{name}, #{ishot}, #{status}, ${sort}, now())
    </insert>
    <select id="getCityById" parameterType="java.lang.String" resultType="com.hx.hxjob.model.City">
        select id, `name`, ishot, `status`, sort
        from city
        where `id` = #{cid}
        and `status` = 'ENABLE'
    </select>
    <update id="editCity" parameterType="java.lang.String">
        update city
        set `name` = #{name},
        ishot  = #{ishot},
        sort   = ${sort}
        where id = #{id}
    </update>
    <delete id="deleteCity" parameterType='java.lang.String'>
        delete
        from city
        where id = #{cid}
    </delete>
    <select id="getIndustriesPage" resultType="com.hx.hxjob.model.Industry">
        select id,`name`,ishot,`status`,sort,date_format(createtime,'%Y-%m-%d %H:%i:%s') as createtime
        from industry
        where `status` = 'ENABLE'
        <if test="name!='' and name!=null">
            and `name` like concat('%',#{name},'%')
        </if>
        <if test="ishot!='' and ishot!=null">
            and `ishot` = #{ishot}
        </if>
        order by ishot desc,sort
        limit ${offset},${limit}
    </select>
    <select id="getIndustriesPageCount" resultType="int">
        select count(1)
        from industry
        where `status` = 'ENABLE'
        <if test="name!='' and name!=null">
            and `name` like concat('%',#{name},'%')
        </if>
        <if test="ishot!='' and ishot!=null">
            and `ishot` = #{ishot}
        </if>
    </select>
    <select id="getIndustryByName" resultType="com.hx.hxjob.model.Industry">
        select id, `name`, ishot, `status`, sort
        from industry
        where `name` = #{name}
        and `status` = 'ENABLE'
    </select>
    <insert id="addIndustry" parameterType="com.hx.hxjob.model.Industry">
        insert into industry(`name`, ishot, `status`, sort, createtime)
        values (#{name}, #{ishot}, #{status}, ${sort}, now())
    </insert>
    <select id="getIndustryById" parameterType="java.lang.String" resultType="com.hx.hxjob.model.Industry">
        select id, `name`, ishot, `status`, sort
        from industry
        where `id` = #{cid}
        and `status` = 'ENABLE'
    </select>
    <update id="editIndustry" parameterType="java.lang.String">
        update industry
        set `name` = #{name},
        ishot  = #{ishot},
        sort   = ${sort}
        where id = #{id}
    </update>
    <delete id="deleteIndustry">
        delete
         from industry
        where id = #{cid}
    </delete>
    <select id="getLastOrgCode" resultType="java.lang.String">
        select `code`
        from organization
        order by id desc
        limit 0,1
    </select>
    <select id="getPcOrganizations" parameterType="java.util.Map" resultType="com.hx.hxjob.model.Organization">
        select
        torg.`code`,torg.`fullname`,torg.shortname,torg.logo,torg.brief,torg.description,
        torg.city,torg.industry,torg.tags,torg.salary,torg.grade,torg.`score`,torg.`sort`,torg.`ishot`,
        date_format(torg.createtime,'%Y-%m-%d %H:%i:%s') as createtime,
        date_format(torg.publishtime,'%Y-%m-%d %H:%i:%s') as publishtime,
        date_format(torg.shelftime,'%Y-%m-%d %H:%i:%s') as shelftime,
        date_format(torg.updatetime,'%Y-%m-%d %H:%i:%s') as updatetime,
        tu.real_name,
        tc.name as cityname,
        ti.name as industryname,
        (select count(1) from organization_praise where orgcode = torg.code) as praise_count,
        (select count(1) from organization_remark where orgcode = torg.code) as commont_count,
        (select count(1) from organization_collection where orgcode = torg.code) as collect_count
        from organization torg
        left join system_user tu on torg.creater = tu.id
        left join city tc on torg.city = tc.id
        left join industry ti on torg.industry = ti.id
        where 1=1
        <if test="name!=null and name!=''">
            and (torg.fullname like concat('%',#{name},'%') or torg.shortname like concat('%',#{name},'%'))
        </if>
        <if test="industry!=null and industry!=''">
            and torg.industry = #{industry}
        </if>
        <if test="city!=null and city!=''">
            and torg.city = #{city}
        </if>
        <if test="ishot!=null and ishot!=''">
            and torg.ishot = #{ishot}
        </if>
        <if test="searchContent!=null and searchContent!=''">
            and
            (
            instr(torg.fullname,#{searchContent}) > 0
            or
            instr(torg.shortname,#{searchContent}) > 0
            )
        </if>
        order by torg.ishot desc,torg.sort
        <if test="pageStart!=null and pageSize!=''">
            limit ${pageStart},${pageSize}
        </if>
    </select>
    <select id="getPcOrganizationsCount" resultType="int">
        select count(1)
        from organization torg
        left join system_user tu on torg.creater = tu.id
        left join city tc on torg.city = tc.id
        left join industry ti on torg.industry = ti.id
        where 1=1
        <if test="name!=null and name!=''">
            and (torg.fullname like concat('%',#{name},'%') or torg.shortname like concat('%',#{name},'%'))
        </if>
        <if test="industry!=null and industry!=''">
            and torg.industry = #{industry}
        </if>
        <if test="city!=null and city!=''">
            and torg.city = #{city}
        </if>
        <if test="ishot!=null and ishot!=''">
            and torg.ishot = #{ishot}
        </if>
        <if test="searchContent!=null and searchContent!=''">
            and
            (
            instr(torg.fullname,#{searchContent}) > 0
            or
            instr(torg.shortname,#{searchContent}) > 0
            )
        </if>
        order by torg.ishot desc,torg.sort
    </select>
    <select id="getPcHotOrganizations" parameterType="java.util.Map"
            resultType="com.hx.hxjob.model.Organization">
        select
        torg.`code`,torg.`fullname`,torg.shortname,torg.logo,torg.brief,torg.description,
        torg.city,torg.industry,torg.tags,torg.salary,torg.grade,torg.`score`,torg.`sort`,torg.`ishot`,
        date_format(torg.createtime,'%Y-%m-%d %H:%i:%s') as createtime,
        date_format(torg.publishtime,'%Y-%m-%d %H:%i:%s') as publishtime,
        date_format(torg.shelftime,'%Y-%m-%d %H:%i:%s') as shelftime,
        date_format(torg.updatetime,'%Y-%m-%d %H:%i:%s') as updatetime,
        tu.real_name,
        tc.name as cityname,
        ti.name as industryname,
        (select count(1) from organization_praise where orgcode = torg.code) as praise_count,
        (select count(1) from organization_remark where orgcode = torg.code) as commont_count,
        (select count(1) from organization_collection where orgcode = torg.code) as collect_count
        from organization torg
        left join system_user tu on torg.creater = tu.id
        left join city tc on torg.city = tc.id
        left join industry ti on torg.industry = ti.id
        where 1=1
        <if test="name!=null and name!=''">
            and (torg.fullname like concat('%',#{name},'%') or torg.shortname like concat('%',#{name},'%'))
        </if>
        <if test="industry!=null and industry!=''">
            and torg.industry = #{industry}
        </if>
        <if test="city!=null and city!=''">
            and torg.city = #{city}
        </if>
        <if test="ishot!=null and ishot!=''">
            and torg.ishot = #{ishot}
        </if>
        order by praise_count desc
        limit ${pageStart},${pageSize}
    </select>
    <select id="getPcHotOrganizationsCount" resultType="int">
        select count(1)
        from organization torg
        left join system_user tu on torg.creater = tu.id
        left join city tc on torg.city = tc.id
        left join industry ti on torg.industry = ti.id
        where 1=1
        <if test="name!=null and name!=''">
            and (torg.fullname like concat('%',#{name},'%') or torg.shortname like concat('%',#{name},'%'))
        </if>
        <if test="industry!=null and industry!=''">
            and torg.industry = #{industry}
        </if>
        <if test="city!=null and city!=''">
            and torg.city = #{city}
        </if>
        <if test="ishot!=null and ishot!=''">
            and torg.ishot = #{ishot}
        </if>
    </select>
    <select id="orgsIndexDatas" resultType="com.hx.hxjob.model.Organization">
        select torg.`code`,
        torg.`fullname`,
        torg.shortname,
        torg.logo,
        torg.brief,
        torg.description,
        torg.city,
        torg.industry,
        torg.tags,
        torg.salary,
        torg.grade,
        torg.`score`,
        torg.`sort`,
        torg.`ishot`,
        date_format(torg.createtime, '%Y-%m-%d %H:%i:%s') as createtime,
        date_format(torg.publishtime, '%Y-%m-%d %H:%i:%s') as publishtime,
        date_format(torg.shelftime, '%Y-%m-%d %H:%i:%s') as shelftime,
        date_format(torg.updatetime, '%Y-%m-%d %H:%i:%s') as updatetime,
        tu.real_name,
        tc.name as cityname,
        ti.name as industryname,
        (select count(1) from organization_praise where orgcode = torg.code) as praise_count,
        (select count(1) from organization_remark o where orgcode = torg.code) as commont_count,
        (select count(1) from organization_collection where orgcode = torg.code) as collect_count
        from organization torg
        left join system_user tu on torg.creater = tu.id
        left join city tc on torg.city = tc.id
        left join industry ti on torg.industry = ti.id
        where 1 = 1
        <if test="name!=null and name!=''">
            and (torg.fullname like concat('%',#{name},'%') or torg.shortname like concat('%',#{name},'%'))
        </if>
        <if test="industry!=null and industry!=''">
            and torg.industry = #{industry}
        </if>
        <if test="city!=null and city!=''">
            and torg.city = #{city}
        </if>
        <if test="ishot!=null and ishot!=''">
            and torg.ishot = #{ishot}
        </if>
        order by praise_count desc
        limit 0,5;
    </select>


    <select id="getOrganizationPraiseByCodeAndMemberid" resultType="com.hx.hxjob.model.OrganizationPraise">
        select id, orgcode, memberid, date_format(createtime, '%Y-%m-%d %H:%i:%s') as createtime
        from organization_praise
        where orgcode = #{code}
        and memberid = #{memberid}
    </select>

    <delete id="deleteOrgPraise">
        delete
        from organization_praise
        where orgcode = #{code}
        and memberid = #{memberid}
    </delete>

    <insert id="addPraise">
        insert into organization_praise(orgcode, memberid, createtime)
        values (#{code}, #{memberid}, now());
    </insert>

    <select id="getOrganizationCollectByCodeAndMemberid" resultType="com.hx.hxjob.model.OrganizationCollect">
        select id, orgcode, memberid, date_format(createtime, '%Y-%m-%d %H:%i:%s') as createtime
        from organization_collection
        where orgcode = #{code}
        and memberid = #{memberid}
    </select>

    <delete id="deleteOrgCollect">
        delete
        from organization_collection
        where orgcode = #{code}
        and memberid = #{memberid}
    </delete>
    <insert id="addCollect">
        insert into organization_collection(orgcode, memberid, createtime)
        values (#{code}, ${memberid}, now());
    </insert>
    <select id="getOrganizationCommentByCodeAndMemberid" resultType="com.hx.hxjob.model.OrganizationRemark">
        select id,
        memberid,
        orgcode,
        orgname,
        memberPhoto,
        city,
        workyear,
        post_status,
        salary_pre_tax,
        other_benefit,
        year_end_money,
        growth,
        workload,
        cultural_context,
        satisfaction,
        theme,
        writing_evaluation,
        evaluate_label,
        img_upload,
        date_format(createtime, '%Y-%m-%d %H:%i:%s') as createtime
        from organization_remark o
        where orgcode = #{orgcode}
        and memberid = #{memberid}
    </select>

    <insert id="userOrgComment" parameterType="java.util.Map">
        insert into organization_remark(memberid, orgcode, orgname, city, workyear, post_status, salary_pre_tax,
        other_benefit, year_end_money, growth, workload, cultural_context, satisfaction,
        theme,
        writing_evaluation, evaluate_label, remake_lable, createtime, img_upload)
        values (#{memberid}, #{orgCode}, #{orgname}, #{city}, #{workyear}, #{postStatus}, #{salaryPreTax},
        #{otherBenefit}, #{yearEndMoney}, #{growth}, #{workload}, #{culturalContext}, #{satisfaction}, #{theme},
        #{writingEvaluation}, #{evaluateLabel}, #{remakeLable}, now(), #{imgUpload});
    </insert>

    <select id="getwhetherByName" resultType="java.lang.String">
        select toc.orgcode as orgcode
        from `member` tm
        left join organization_remark toc on tm.id = toc.memberid
        where toc.orgcode = #{code}
        AND toc.memberId = #{memberId}
    </select>
    <select id="getOrganizationCommenIndexHot" resultType="com.hx.hxjob.model.OrganizationRemark">
        select toc.id,
               toc.memberid,
               toc.orgcode,
               toc.orgname,
               toc.memberPhoto,
               toc.city,
               toc.workyear,
               toc.post_status,
               toc.salary_pre_tax,
               toc.other_benefit,
               toc.year_end_money,
               toc.growth,
               toc.workload,
               toc.cultural_context,
               toc.satisfaction,
               toc.theme,
               toc.writing_evaluation,
               toc.evaluate_label,
               toc.img_upload,
               date_format(toc.createtime, '%Y-%m-%d') as createtime,
               tm.nickname,
               tm.head_photo,
               o.fullname,
               o.tags,
               (select count(1) from save_remark_member srm where srm.remarkid = toc.id) as remark_count
        from organization_remark toc
                 join `member` tm on toc.memberid = tm.id
                 join organization o on o.code = toc.orgcode
        order by remark_count desc
        limit 0,3;
    </select>
    <select id="orgCommentsWhetherPraise" resultMap="memberMap">
        select m.id, srm.id as srmId, srm.memberid, srm.remarkid
        from `member` m
        left join save_remark_member srm on m.id = srm.memberid
        where m.username = #{username}
    </select>

    <select id="getOrganizationCommentPageCount" parameterType="java.util.Map" resultType="int">
        select count(1)
        from organization_comment
        order by createtime desc
        <if test="offset!=null and offset!=''">
            limit ${offset},${limit}
        </if>
    </select>
    <select id="getOrganizationCommentPage" parameterType="java.util.Map"
            resultType="com.hx.hxjob.model.OrganizationRemark">
        select
        toc.id,toc.memberid,toc.orgcode,toc.orgname,toc.memberPhoto,toc.city,toc.workyear,toc.post_status,toc.salary_pre_tax,toc.other_benefit,toc.year_end_money,toc.growth,toc.workload,
        toc.cultural_context,toc.satisfaction,toc.theme,toc.writing_evaluation,toc.evaluate_label,toc.img_upload,
        date_format(toc.createtime,'%Y-%m-%d') as createtime,
        substring_index(toc.evaluate_label, ',', 2) as evaluateLabel,
        tm.nickname,
        tm.head_photo,
        o.fullname,
        o.tags,
        (select count(1) from save_remark_member srm where srm.remarkid = toc.id) as remark_count
        from organization_remark toc join `member` tm on toc.memberid = tm.id
        join organization o on o.code = toc.orgcode
        where toc.orgcode = #{orgcode}
        order by toc.createtime desc
        <if test="offset!=null and offset!=''">
            limit ${offset},${limit}
        </if>
    </select>
    <select id="getOrganizationCommenRecommend" resultType="com.hx.hxjob.model.OrganizationRemark">
        select
        toc.id,toc.memberid,toc.orgcode,toc.orgname,toc.memberPhoto,toc.city,toc.workyear,toc.post_status,toc.salary_pre_tax,toc.other_benefit,toc.year_end_money,toc.growth,toc.workload,
        toc.cultural_context,toc.satisfaction,toc.theme,toc.writing_evaluation,toc.evaluate_label,toc.img_upload,
        date_format(toc.createtime,'%Y-%m-%d') as createtime,
        tm.nickname,
        o.fullname,
        o.tags,
        (select count(1) from save_remark_member srm where srm.remarkid = toc.id) as remark_count
        from organization_remark toc join `member` tm on toc.memberid = tm.id
        join organization o on o.code = toc.orgcode
        where toc.orgcode = #{orgcode} AND toc.post_status LIKE '%应届生%'
        order by remark_count desc
        <if test="offset!=null and offset!=''">
            limit ${offset},${limit}
        </if>
    </select>
    <select id="getOrganizationCommentPageOnJob" parameterType="java.util.Map"
            resultType="com.hx.hxjob.model.OrganizationRemark">
        select
        toc.id,toc.memberid,toc.orgcode,toc.orgname,toc.memberPhoto,toc.city,toc.workyear,toc.post_status,toc.salary_pre_tax,toc.other_benefit,toc.year_end_money,toc.growth,toc.workload,
        toc.cultural_context,toc.satisfaction,toc.theme,toc.writing_evaluation,toc.evaluate_label,toc.img_upload,
        date_format(toc.createtime,'%Y-%m-%d') as createtime,
        tm.nickname,
        tm.head_photo,
        o.fullname,
        o.tags,
        (select count(1) from save_remark_member srm where srm.remarkid = toc.id) as remark_count
        from organization_remark toc join `member` tm on toc.memberid = tm.id
        join organization o on o.code = toc.orgcode
        where toc.orgcode = #{orgcode} AND toc.post_status LIKE '%实习生%'
        order by toc.createtime desc
        <if test="offset!=null and offset!=''">
            limit ${offset},${limit}
        </if>
    </select>
    <select id="getOrganizationCommenPractice" resultType="com.hx.hxjob.model.OrganizationRemark">
        select
        toc.id,toc.memberid,toc.orgcode,toc.orgname,toc.memberPhoto,toc.city,toc.workyear,toc.post_status,toc.salary_pre_tax,toc.other_benefit,toc.year_end_money,toc.growth,toc.workload,
        toc.cultural_context,toc.satisfaction,toc.theme,toc.writing_evaluation,toc.evaluate_label,toc.img_upload,
        date_format(toc.createtime,'%Y-%m-%d') as createtime,
        tm.nickname,
        tm.head_photo,
        o.fullname,
        o.tags,
        (select count(1) from save_remark_member srm where srm.remarkid = toc.id) as remark_count
        from organization_remark toc join `member` tm on toc.memberid = tm.id
        join organization o on o.code = toc.orgcode
        where toc.orgcode = #{orgcode} AND toc.post_status LIKE '%培训生%'
        order by toc.createtime desc
        <if test="offset!=null and offset!=''">
            limit ${offset},${limit}
        </if>
    </select>
    <select id="getSimilarOrg" resultType="com.hx.hxjob.model.Organization">
        select code,shortname,fullname,brief from organization where  industry  = #{industry} and code not in (#{code})
        limit 0,10
    </select>
</mapper>